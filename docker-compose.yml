# ============================================================
# 🧩 TaskList Backend - Docker Compose
# ============================================================

name: tasklist-backend

services:
  # ----------------------------------------------------------
  # 🐘 Base de datos PostgreSQL
  # ----------------------------------------------------------
  db:
    image: postgres:16
    container_name: tasklist-backend-db-1
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 2s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data

  # ----------------------------------------------------------
  # 🚀 Aplicación principal (FastAPI + Ngrok)
  # ----------------------------------------------------------
  app:
    build:
      context: .
    container_name: tasklist-backend-app-1
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      CORS_ORIGINS: ${CORS_ORIGINS}
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - "${APP_PORT:-8012}:8000"
    volumes:
      - ./tasklist_app:/app/tasklist_app:rw
      - ./alembic:/app/alembic:rw
      - ./alembic.ini:/app/alembic.ini:ro
      - ./entrypoint.sh:/app/entrypoint.sh:ro
    command: ["/app/entrypoint.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .           # carpeta donde está tu Dockerfile
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./tasklist_app/static:/app/tasklist_app/static:ro
      - ./tasklist_app/templates:/app/tasklist_app/templates:ro
    command: uvicorn tasklist_app.main:app --host 0.0.0.0 --port 8000 --proxy-headers
  # ----------------------------------------------------------
  # 🧪 Servicio para pruebas automatizadas (pytest)
  # ----------------------------------------------------------
  app-test:
    build:
      context: .
    container_name: tasklist-backend-tests
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    volumes:
      - ./tasklist_app:/app/tasklist_app:rw
      - ./alembic:/app/alembic:rw
      - ./alembic.ini:/app/alembic.ini:ro
      - ./tests:/app/tests:rw
    command: >
      bash -lc "
        python -m pip install -U pip &&
        pip install pytest pytest-cov httpx pytest-asyncio &&
        pip install 'python-jose[cryptography]' 'passlib[bcrypt]' pydantic-settings openpyxl &&
        pytest -q --disable-warnings
      "


# ----------------------------------------------------------
# 📦 Volúmenes persistentes
# ----------------------------------------------------------
volumes:
  db_data:
